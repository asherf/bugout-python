import argparse
import logging
import textwrap

from .app import Bugout
from .user import User

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def user_get_handler(args: argparse.Namespace) -> None:
    """
    Handler for "users get" subcommand.
    """
    bugout = Bugout(url=args.url, port=args.port)
    user_obj = User(bugout)

    result = user_obj.get_user(token=args.token)

    print(result)


def user_create_handler(args: argparse.Namespace) -> None:
    """
    Handler for "users create" subcommand.
    """
    bugout = Bugout(url=args.url, port=args.port)
    user_obj = User(bugout)

    result = user_obj.create_user(
        username=args.username,
        email=args.email,
        password=args.password,
        autogenerated_token=args.autogenerated_token,
    )

    print(result)


def main() -> None:
    bugout_description = textwrap.dedent(
        """\
        Bugout API: Tools for helping with Bugout API.
        """
    )
    parser = argparse.ArgumentParser(prog="bugout", description=bugout_description)
    parser.set_defaults(func=lambda _: parser.print_help())
    subcommands = parser.add_subparsers(description="Journal commands")

    parser.add_argument(
        "--url",
        default="localhost",
        help="Dest url",
    )
    parser.add_argument(
        "--port",
        default="443",
        help="Dest port",
    )

    # Users handler
    parser_users = subcommands.add_parser(
        "users", description="Work with Bugout users API handlers"
    )
    parser_users.set_defaults(
        func=lambda _: parser_users.print_help(), subparser="users"
    )
    subcommands_users = parser_users.add_subparsers(description="Users commands")

    parser_user_get = subcommands_users.add_parser("get", description="Get user")
    parser_user_get.set_defaults(subcommand="get")
    parser_user_get.add_argument(
        "-t",
        "--token",
        required=True,
        help="User token",
    )
    parser_user_get.set_defaults(func=user_get_handler)

    parser_user_create = subcommands_users.add_parser(
        "create", description="Create user"
    )
    parser_user_create.set_defaults(subcommand="create")
    parser_user_create.add_argument(
        "-u",
        "--username",
        required=True,
        help="Username",
    )
    parser_user_create.add_argument(
        "-e",
        "--email",
        required=True,
        help="Email",
    )
    parser_user_create.add_argument(
        "-p",
        "--password",
        required=True,
        help="Password",
    )
    parser_user_create.add_argument(
        "-a",
        "--autogenerated_token",
        help="Token",
    )
    parser_user_create.set_defaults(func=user_create_handler)

    args = parser.parse_args()
    args.func(args)


if __name__ == "__main__":
    main()
